// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Solution = require("../Solution.bs.js");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_SetString = require("rescript/lib/js/belt_SetString.js");

var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

function splitInHalf(str) {
  var len = str.length;
  var asArray = str.split("");
  return [
          Belt_SetString.fromArray(Belt_Array.slice(asArray, 0, len / 2 | 0)),
          Belt_SetString.fromArray(Belt_Array.slice(asArray, len / 2 | 0, len / 2 | 0))
        ];
}

function toScore($$char) {
  return chars.indexOf($$char) + 1 | 0;
}

function toStrSet(str) {
  return Belt_SetString.fromArray(str.split(""));
}

function scoreByGroup(list) {
  if (!list) {
    return 0;
  }
  var match = list.tl;
  if (!match) {
    return 0;
  }
  var match$1 = match.tl;
  if (!match$1) {
    return 0;
  }
  var score = Belt_SetString.reduce(Belt_SetString.intersect(Belt_SetString.intersect(Belt_SetString.fromArray(list.hd.split("")), Belt_SetString.fromArray(match.hd.split(""))), Belt_SetString.fromArray(match$1.hd.split(""))), 0, (function (acc, i) {
          return acc + toScore(i) | 0;
        }));
  return score + scoreByGroup(match$1.tl) | 0;
}

function part01(input) {
  return input.split("\n").reduce((function (acc, i) {
                var match = splitInHalf(i);
                var duplicates = Belt_SetString.intersect(match[0], match[1]);
                var score = Belt_SetString.reduce(duplicates, 0, (function (acc, i) {
                        return acc + toScore(i) | 0;
                      }));
                return acc + score | 0;
              }), 0);
}

function part02(input) {
  return scoreByGroup(Belt_List.fromArray(input.split("\n")));
}

Solution.make(part01, "day03/input");

Solution.make(part02, "day03/input");

exports.chars = chars;
exports.splitInHalf = splitInHalf;
exports.toScore = toScore;
exports.toStrSet = toStrSet;
exports.scoreByGroup = scoreByGroup;
exports.part01 = part01;
exports.part02 = part02;
/*  Not a pure module */
